<?xml version="1.0" encoding="utf-8" ?>
<project name="empiria.player" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<tstamp><format property="tstamp" pattern="yyyyMMddHHmm" timezone="GMT"/></tstamp>
	<property file="default.properties" />
	
	<dirname property="base.dir" file="${ant.file.empiria.player}" />
	<property name="lib.dir" value="${base.dir}/ivy-lib" />	
	<property name="lib.static.dir" value="${base.dir}/static-lib" />	
	<echo>${lib.dir}</echo>
	
  <condition property="XstartOnFirstThread" value="-XstartOnFirstThread">
    <os family="mac"/>
  </condition>
  
  <condition property="XstartOnFirstThread" value="">
    <not><os family="mac"/></not>
  </condition>

  <path id="project.class.path">
    <pathelement location="war/WEB-INF/classes"/>
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
    <fileset dir="${lib.static.dir}" includes="**/*.jar"/>
    <fileset dir="war/WEB-INF/lib" includes="**/*.jar"/>
  </path>

  <target name="resolve" description="--> retrieve dependencies with ivy">
  	<ivy:retrieve pattern="${lib.dir}/[artifact].[ext]" />
  </target>
    
  <target name="libs" depends="resolve" description="Copy libs to WEB-INF/lib">
    <mkdir dir="war/WEB-INF/lib" />
    <copy todir="war/WEB-INF/lib">
		<fileset dir="${lib.dir}" includes="**/*.jar"/> 
		<fileset dir="${lib.static.dir}" includes="**/*.jar"/>  
	</copy>
    <!-- Add any additional server libs that need to be copied -->
  </target>

  <target name="javac" depends="libs" description="Compile java source">
    <mkdir dir="war/WEB-INF/classes"/>
    <javac srcdir="src" includes="**" encoding="utf-8"
        destdir="war/WEB-INF/classes"
        source="1.5" target="1.5" nowarn="true"
        debug="true" debuglevel="lines,vars,source">
      <classpath refid="project.class.path"/>
    </javac>
    <copy todir="war/WEB-INF/classes">
      <fileset dir="src" excludes="**/*.java"/>
    </copy>
  </target>
  
  <target name="gwtc" depends="javac" description="GWT compile to JavaScript">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
      <jvmarg value="-Xmx256M"/>
      <jvmarg line="${XstartOnFirstThread}"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg value="eu.ydp.empiria.player.Player"/>
    </java>
  </target>

  <target name="hosted" depends="javac" description="Run hosted mode">
    <java failonerror="true" fork="true" classname="com.google.gwt.dev.HostedMode">
      <classpath>
        <pathelement location="src"/>
        <path refid="project.class.path"/>
      </classpath>
      <jvmarg value="-Xmx256M"/>
      <jvmarg line="${XstartOnFirstThread}"/>
      <arg value="-startupUrl"/>
      <arg value="test.html"/>
      <!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
      <arg value="com.qtitools.player.Player"/>
    </java>
  </target>

  <target name="build" depends="gwtc" description="Build this project" />

  <target name="war" depends="build" description="Create a war file">
    <zip destfile="empiriaplayer.war" basedir="war"/>
  </target>

  <target name="clean" description="Cleans this project">
    <delete dir="dist"/>
    <delete dir="war/WEB-INF/classes" failonerror="false" />
    <delete dir="war/empiria.player" failonerror="false" />
  </target>
  
  <target name="buildnumber" description="Update build number">
	<ivy:buildnumber organisation="eu.ydp" module="empiriaplayer" />
  </target>

  <target name="dist" depends="clean, build, buildnumber" description="Create java script distribution">
    <mkdir dir="dist/build" />
    <copy todir="dist/build/empiria.player">
      <fileset dir="war/empiria.player"/>
    </copy>

    <zip destfile="dist/empiriaplayer.zip" basedir="dist/build/empiria.player"/>
  </target>
  
  <target name="publish" depends="dist, project.file" description="Publish artifacts into Ivy repository">  	
  	<!-- resolve is needed to get organization/module from ivy.xml for publish task !-->
		<ivy:resolve />
		<ivy:publish
			pubrevision="${revision}"
			resolver="${ivy.publish.ydp.resolver}"
			status="${ivy.publish.status}"
			forcedeliver="true"
			artifactspattern="dist/[artifact].[ext]"
			overwrite="true"/>		
	</target>
	
	<target name="project.file">
		<copy file="${base.dir}/project.template.xml" tofile="${base.dir}/project.xml" encoding="UTF-8">
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
	</target>  

</project>
